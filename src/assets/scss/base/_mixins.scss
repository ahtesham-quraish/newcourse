// @include border-radius(5px);
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

// @include m-radius(5px,5px,5px,5px);
@mixin m-radius($val1,$val2,$val3,$val4) {
  -webkit-border-radius: $val1 $val2 $val3 $val4;
     -moz-border-radius: $val1 $val2 $val3 $val4;
      -ms-border-radius: $val1 $val2 $val3 $val4;
          border-radius: $val1 $val2 $val3 $val4;
}

@mixin transition($time){
    -webkit-transition: $time;
    -o-transition: $time;
    transition: $time;
}

%clearfix{
	&:after{
		display: block;
		content: '';
		clear: both;
	}
}

%listreset{
	padding: 0;
	margin: 0;
	list-style: none;
}

// @include v-align(middle);

@mixin v-align($val) {
	white-space: normal;
	letter-spacing: 0;
	display: inline-block;
	vertical-align: $val;
}

// vertical align el inside parent with fixed height/min-height
// usage 
// html - .parent>.child
// scss - @include vertical-align;
//     or @include vertical-align(250px);
//     or @include vertical-align(250px, bottom, before);
//
@mixin vertical-align($va-height: 100%, $va-direction: middle, $va-pseudo: after) {
  white-space: nowrap;
  text-align: center;

  &:#{$va-pseudo} {
    content: '';
    display: inline-block;
    vertical-align: $va-direction;
    width: 0;
    min-height: $va-height;
  }

  > * {
    white-space: normal;
    display: inline-block;
    vertical-align: $va-direction;
    max-width: 99%;
  }
}




// generic transform
@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}
 
// scale
@mixin scale($scale) {
	 @include transform(scale($scale));
} 
// translate
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
    moz-transform-origin: $origin;
	     -o-transform-origin: $origin;
	    -ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
          transform-origin: $origin;
}



// @include transition(background-color 1s .5s, color 2s);

@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}
@mixin transition-property($property...) {
    -moz-transition-property:    $property;
    -o-transition-property:      $property;
    -webkit-transition-property: $property;
    transition-property:         $property;
}
@mixin transition-duration($duration...) {
    -moz-transition-property:    $duration;
    -o-transition-property:      $duration;
    -webkit-transition-property: $duration;
    transition-property:         $duration;
}
@mixin transition-timing-function($timing...) {
    -moz-transition-timing-function:    $timing;
    -o-transition-timing-function:      $timing;
    -webkit-transition-timing-function: $timing;
    transition-timing-function:         $timing;
}
@mixin transition-delay($delay...) {
    -moz-transition-delay:    $delay;
    -o-transition-delay:      $delay;
    -webkit-transition-delay: $delay;
    transition-delay:         $delay;
}